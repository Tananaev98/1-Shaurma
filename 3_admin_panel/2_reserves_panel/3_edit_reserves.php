<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Заголовок страницы</title>
    

</head>
<body>

<?php
//-------------------------------------------------------------------0 Настройки------------------------------------------------------
ini_set('display_errors', 1);//Включаем обнаружение ошибок
error_reporting(E_ALL);//Включаем обнаружение ошибок
//------------------------------------------------------------------------------------------------------------------------------------

session_start();// Запускаем сессию для проверки авторизации и аутентификации пользователей 

if (!isset($_SESSION['fio'])) {
    // Если сессия не инициализирована, перенаправляем пользователя на страницу входа или показываем сообщение об ошибке
    echo "<div class = 'authorization'>Вы не авторизованы!!!.<br><br><a href='../index.html'>Перейти на страницу авторизации</a></div>"; // Выводим пользователю сообщение о том что он
    // не авторизован и даем ему ссылку на страницу авторизации
    exit(); // Прерываем выполнение скрипта
}
if ($_SESSION['role'] !== "admin") { //после успешной авторизации дополнительно проводим проверку на аутентификацию
    echo "<div class = 'authorization'>Ваших прав недостаточно для просмотра этой страницы!!!!.<br><br><a href='/index.html'>Перейти на страницу авторизации</a></div>";//выводим 
    //сообщение в случае не удачной аутентификации
    exit(); // Прерываем выполнение скрипта
}
echo "<h3 class='fio_autorization'>{$_SESSION['fio']}       <a href='../2_authorization/2_exit.php'><br>Выход</a> </h3>"; //Вывод активного пользователя и кнопка выхода  
 
?>


<style>
        body {
            background-color: #333333;/* Задаем фон страницы */
        }
        div { /* Задаем селектор который будет общим для текста */ 
          color: #FFFFFF;  /* Задаем фон текста */  
          font-family: "MyCustomFont", Arial, sans-serif; /* Задаем более симпатичный шрифт */
        }

        .authorization { /*Стиль для блока авторизации */
        width: 60%; /* Ширина блока */
        height: 850px; /* Высота блока */
        background-color: #FF7033; /* Цвет фона */
        color: #fff; /* Цвет текста */
        text-align: center; /* Выравнивание текста по центру */
        line-height: 50px; /* Высота строки для вертикального выравнивания текста */
        margin: -5% auto; /* Расположение по центру по горизонтали и с отступами */
        border: 4px solid white; /* Толстая белая рамка */
        border-radius: 10px; /* Закругленные углы */
        font-size: 20px; /* Установите желаемый размер шрифта */
        font-weight: bold; /* Установите желаемую жирность шрифта */
        text-align: center; /* Выравнивание текста по центру */
        justify-content: center; /* Центрирование содержимого по горизонтали */
        }
        a{
            color: #fff;
        }
        .fio_autorization{/* стиль для строки вывода активного пользователя и кнопки выхода */
            text-align: right; /* Выравнивание текста по правому краю */
            color: black; /* Цвет текста */
            padding: 20px; /* Отступы для текста */ 
        }
        input[type="text"] { /* Задаем стиль для инпутов с типом текст */
        position: relative;/* позиция относительно блока */
        width: 30%; /* Установка ширины на 100%, чтобы элемент занимал всю доступную ширину */
        padding: 10px; /* Добавление внутреннего отступа в 10 пикселей вокруг текстового поля */
        margin-top: 3%; /* Добавление отступа снизу в 10 пикселей между текстовыми полями */
        border: none; /* Удаление границы текстового поля (без рамки) */
        border-radius: 5px; /* Закругление углов текстового поля с радиусом 5 пикселей*/
        background-color: #FFDAB9;/* цвет фона*/
        color:#FF7033;/* цвет текста внутри кнопки*/
        font-size: 16px; /* Установите желаемый размер шрифта */
        font-weight: bold; /* Установите желаемую жирность шрифта */
        flex:1;
        }

        textarea { /* Задаем стиль для инпутов с типом пароль */
        position: relative;/* позиция относительно блока */
        width: 50%; /* Установка ширины на 100%, чтобы элемент занимал всю доступную ширину */
        padding: 5px; /* Добавление внутреннего отступа в 10 пикселей вокруг текстового поля */
        margin-top: 3%; /* Добавление отступа снизу в 10 пикселей между текстовыми полями */
        border: none; /* Удаление границы текстового поля (без рамки) */
        border-radius: 5px; /* Закругление углов текстового поля с радиусом 5 пикселей*/
        background-color: #FFDAB9;/* цвет фона*/
        font-size: 16px; /* Установите желаемый размер шрифта */
        font-weight: bold; /* Установите желаемую жирность шрифта */
        }

        input[type="submit"] { /* Задаем стиль для инпутов с типом пароль */
        position: relative;/* позиция относительно блока */
        width: 50%; /* Установка ширины на 100%, чтобы элемент занимал всю доступную ширину */
        padding: 10px; /* Добавление внутреннего отступа в 10 пикселей вокруг текстового поля */
        margin-top: 3%; /* Добавление отступа снизу в 10 пикселей между текстовыми полями */
        border: none; /* Удаление границы текстового поля (без рамки) */
        border-radius: 5px; /* Закругление углов текстового поля с радиусом 5 пикселей*/
        background-color: #FF4500;/* цвет фона*/
        color:#FFFFFF;/* цвет текста внутри кнопки*/
        }
        img {/* Стили для изображения*/
            height:200px;/* Высота изображения*/
            width:200px;/* ширина изображения*/
            border: 5px solid white; /* Задаем белую рамку толщиной 1 пиксель */
        }
       
        
       label {
        position: absolute;
        margin-left:-15%;
        margin-top:1.5%;
       }
    </style>
<?php
echo"<div class = 'authorization'>"; //выводим блок со стилями 

//-----------------------------------------------------------------Проверка получения идентификатора объекта-----------------------------------------------------
if (isset($_GET['id_object'])) {//выполняем проверку на получение идентификатора объекта из сценария 1_menu_panel.php
    $id_object = urldecode($_GET['id_object']);//если значение есть тогда декодируем его и  присваиваем значение в переменную для дальнейшего использования
} else {
  echo"Идентификатор объекта не получен!"; exit(); echo"</div'>";//Если значение не получено тогда выводим сообщение и прерываем сценарий
}
//echo "Идентификатор объекта получен!<br> его значение = $id_object";  
//---------------------------------------------------------------------------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------Соединение с бд------------------------------------------------------------------------------
// Устанавливаем и проверяем соединение с базой данных
$db_host = "192.168.1.94"; // Имя хоста базы данных
$db_port = "5432"; // Порт базы данных (по умолчанию 5432 для PostgreSQL)
$db_name = "shaurmadb"; // Имя базы данных
$db_user = "adminsh"; // Имя пользователя базы данных
$db_password = "admin"; // Пароль пользователя базы данных
$conn = pg_connect("host=$db_host port=$db_port dbname=$db_name user=$db_user password=$db_password");//используя данные устанавливаем соединение

// Проверяем успешность соединения
if (!$conn) {
    
    echo "Ошибка подключения к базе данных: " . pg_last_error($conn);//в случае неудачи выводим ошибку
    exit; //прекращаем выполнение кода если соединение с базой не установленно, дабы избежать выполнение лишнего кода
} 

//Если соединение установленно успешно продолжаем выполнение кода
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//------------------------------------------------------------Делаем запрос к бд находим и выводим объект меню на основании идентификатора--------------------------------------
$sql = "select * from reserves where id = '$id_object'";//Подготавливаем запрос по поиску соответсвия логина и пароля в базе. используем имя введенное пользователем
//для проверки его существующего дубля в базе данных
$result = pg_query($conn, $sql);//выполняем запрос к бд используя подготовленное соединение и запрос

if (pg_num_rows($result) < 1) {//Если результат выборки меньше единиы значит данных нет необходимо вывести пользователю ошибку и прекратить выполнение кода
    
    echo "<h3 class='text_yellow'>Запись с таким идентификатором не найдена, возможно она уже удалена</h3>";//Выводим ошибку 

    echo "</div>";//закрываем блок со стилями в случае ошибки т.к. функция exit прекратит выполнение кода 

    pg_close($conn);//Закрываем соединение с бд
    
    exit();//прекращаем выполнение кода
    }

$row = pg_fetch_assoc($result);//сохраняем результат выборки в переменую в массив $row

$name = $row['name'];//сохраняем название из бд в переменную

$min_q = $row['min_quantity'];//сохраняем Описание из бд в переменную

$max_q = $row['max_quantity'];//сохраняем цену из бд в переменную

$crit_q = $row['critical_quantity'];//сохраняем ссылку на изображение из бд в переменную
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

?>


<!-- дальнейший код html не будет отображен в случае не удачной авторизации или аутентификации-->

<form action="3.1_edit_reserves.php" method="post" enctype="multipart/form-data" id="formID" ><!-- создаем форму для последующей отправки в php -->
<h2>Редактирование шаблона ингредиента</h2><!-- Заголовок формы -->
<label>Наименование: </label><input type="text" id="l1" name="name" value="<?php echo $name ?>"><br><!-- Поле для ввода названия нового объекта -->
<label>Минимальное количество: </label><input type="text" id="l2" name="min_q" class='numberInput' value="<?php echo $min_q ?>"><br><!-- Поле для ввода цены нового объекта -->
<label>Максимальное количество: </label><input type="text" id="l3" name="max_q" class='numberInput' value="<?php echo $max_q ?>"><br><!-- Поле для ввода цены нового объекта -->
<label>Критическое количество: </label><input type="text" id="l4" name="crit_q" class='numberInput' value="<?php echo $crit_q ?>"><br><!-- Поле для ввода цены нового объекта -->
<input type="hidden" name="id_object" value="<?php echo $id_object ?>"><!-- Скрытое поле формы для возможности передачи идентификатора объекта методом POST -->
<input type="submit" value="Обновить данные"><!-- Кнопка "Создать" -->
</form>

<script>
//-----------Проверяем что пользователь вводит только цифры в поля 2 3 и 4 
// Получаем все поля ввода с классом "numberInput"
var numberInputs = document.querySelectorAll(".numberInput");

// Добавляем обработчик события input к каждому полю ввода с классом "numberInput"
numberInputs.forEach(function(input) {
  input.addEventListener("input", function(event) {
    // Получаем введенный текст
    var inputValue = event.target.value;
    
    // Удаляем все нецифровые символы из введенного текста
    var onlyDigits = inputValue.replace(/\D/g, "");
    
    // Обновляем значение в поле ввода, оставляя только цифры
    event.target.value = onlyDigits;
  });
});


//--------------------------------------------------------------------------

//----------------------------------------C Помощью js предотавращаем вставку лишних пробелов в имени файла---------------------------------------------    
// Получаем ссылку на форму
var form = document.getElementById("formID");

// Добавляем обработчик события submit
form.addEventListener("submit", function(event) {
    // Обрабатываем все поля ввода с id, начинающимися с "l"
    for (var i = 1; i <= 4; i++) {
        // Получаем значение из поля ввода
        var userInput = document.getElementById("l" + i).value;
        
        // Удаляем пробелы в начале и в конце строки и дублирующиеся пробелы
        userInput = userInput.trim().replace(/\s+/g, ' ');
        
        // Устанавливаем очищенное значение обратно в поле ввода
        document.getElementById("l" + i).value = userInput;
    }

    // Теперь можно явно отправить форму на сервер
    form.submit();
    
});
//-------------------------------------------------------------------------------------------------------------------------------------------------------
</script>    


<?php
echo"</div>"; //выводим блок со стилями 

?>

</body>
