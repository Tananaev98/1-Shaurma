<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Заголовок страницы</title>
    

</head>
<body>

<?php
//-------------------------------------------------------------------0 Настройки------------------------------------------------------
ini_set('display_errors', 1);//Включаем обнаружение ошибок
error_reporting(E_ALL);//Включаем обнаружение ошибок
//------------------------------------------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------Проверка авторизации------------------------------------------------------------------------------
session_start();// Запускаем сессию для проверки авторизации и аутентификации пользователей 

if (!isset($_SESSION['fio'])) {
    // Если сессия не инициализирована, перенаправляем пользователя на страницу входа или показываем сообщение об ошибке
    echo "<div class = 'authorization'>Вы не авторизованы!!!.<br><br><a href='../index.html'>Перейти на страницу авторизации</a></div>"; // Выводим пользователю сообщение о том что он
    // не авторизован и даем ему ссылку на страницу авторизации
    exit(); // Прерываем выполнение скрипта
}
if ($_SESSION['role'] !== "admin") { //после успешной авторизации дополнительно проводим проверку на аутентификацию
    echo "<div class = 'authorization'>Ваших прав недостаточно для просмотра этой страницы!!!!.<br><br><a href='/index.html'>Перейти на страницу авторизации</a></div>";//выводим 
    //сообщение в случае не удачной аутентификации
    exit(); // Прерываем выполнение скрипта
}
echo "<h3 class='fio_autorization'>{$_SESSION['fio']}       <a href='../2_authorization/2_exit.php'>Выход</a> </h3>"; //Вывод активного пользователя и кнопка выхода
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
?>


<style>
        body {
            background-color: #333333;/* Задаем фон страницы */
        }
        div { /* Задаем селектор который будет общим для текста */ 
          color: #FFFFFF;  /* Задаем фон текста */  
          font-family: "MyCustomFont", Arial, sans-serif; /* Задаем более симпатичный шрифт */
        }

        .authorization { /*Стиль для блока авторизации */
        width: 60%; /* Ширина блока */
        height: 750px; /* Высота блока */
        background-color: #FF7033; /* Цвет фона */
        color: #fff; /* Цвет текста */
        text-align: center; /* Выравнивание текста по центру */
        line-height: 50px; /* Высота строки для вертикального выравнивания текста */
        margin: 1% auto; /* Расположение по центру по горизонтали и с отступами */
        border: 4px solid white; /* Толстая белая рамка */
        border-radius: 10px; /* Закругленные углы */
        font-size: 24px; /* Установите желаемый размер шрифта */
        font-weight: bold; /* Установите желаемую жирность шрифта */
        text-align: center; /* Выравнивание текста по центру */
        justify-content: center; /* Центрирование содержимого по горизонтали */
        }
        a{
            color: #fff;
        }
        .fio_autorization{/* стиль для строки вывода активного пользователя и кнопки выхода */
            text-align: right; /* Выравнивание текста по правому краю */
            color: black; /* Цвет текста */
            padding: 20px; /* Отступы для текста */ 
        }

        .text_yellow{/* Класс для создания желтого текста*/
            color:yellow;
        }
        .text_red{/* Класс для создания желтого текста*/
            color:#FF1800;
        }

        img {/* Стили для изображения*/
            height:200px;/* Высота изображения*/
            width:200px;/* ширина изображения*/
            border: 5px solid white; /* Задаем белую рамку толщиной 1 пиксель */
        }

       /* Стили для поля ввода */
       input[type="text"] { /* Задаем стиль для инпутов с типом текст */
        position: relative;/* позиция относительно блока */
        width: 50%; /* Установка ширины на 100%, чтобы элемент занимал всю доступную ширину */
        padding: 10px; /* Добавление внутреннего отступа в 10 пикселей вокруг текстового поля */
        margin-top: 3%; /* Добавление отступа снизу в 10 пикселей между текстовыми полями */
        border: none; /* Удаление границы текстового поля (без рамки) */
        border-radius: 5px; /* Закругление углов текстового поля с радиусом 5 пикселей*/
        background-color: #FFDAB9;/* цвет фона*/
        color:#FF7033;/* цвет текста внутри кнопки*/
        font-size: 16px; /* Установите желаемый размер шрифта */
        font-weight: bold; /* Установите желаемую жирность шрифта */
        }


        input[type="submit"] { /* Задаем стиль для инпутов с типом пароль */
        position: relative;/* позиция относительно блока */
        width: 50%; /* Установка ширины на 100%, чтобы элемент занимал всю доступную ширину */
        padding: 10px; /* Добавление внутреннего отступа в 10 пикселей вокруг текстового поля */
        margin-top: 3%; /* Добавление отступа снизу в 10 пикселей между текстовыми полями */
        border: none; /* Удаление границы текстового поля (без рамки) */
        border-radius: 5px; /* Закругление углов текстового поля с радиусом 5 пикселей*/
        background-color: #FF4500;/* цвет фона*/
        color:#FFFFFF;/* цвет текста внутри кнопки*/
        visibility: hidden;/* По умолчанию скрываем кнопку удаления, дабы избежать неверного ввода данных со стороны пользователя*/
        
        }

        /* Стиль для сообщения об ошибке */
        .errorMessage {
            color: red;
        }
    </style>




<?php



echo"<div class = 'authorization'>"; //выводим блок со стилями 



//---------------------------------------------------------------------------Соединение с бд------------------------------------------------------------------------------
// Устанавливаем и проверяем соединение с базой данных
$db_host = "192.168.1.94"; // Имя хоста базы данных
$db_port = "5432"; // Порт базы данных (по умолчанию 5432 для PostgreSQL)
$db_name = "shaurmadb"; // Имя базы данных
$db_user = "adminsh"; // Имя пользователя базы данных
$db_password = "admin"; // Пароль пользователя базы данных
$conn = pg_connect("host=$db_host port=$db_port dbname=$db_name user=$db_user password=$db_password");//используя данные устанавливаем соединение

// Проверяем успешность соединения
if (!$conn) {
    
    echo "Ошибка подключения к базе данных: " . pg_last_error($conn);//в случае неудачи выводим ошибку
    exit; //прекращаем выполнение кода если соединение с базой не установленно, дабы избежать выполнение лишнего кода
} 

//Если соединение установленно успешно продолжаем выполнение кода
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------



//------------------------------------------------------1 получаем данные-----------------------------------------------------------------------------------------------------

if ($_SERVER["REQUEST_METHOD"] == "POST") {  //выполняем проверку на то что запрос к серверу является post 

    if (empty($_POST["delete_object"])){echo "Название товара не введено!"; echo "</div>"; exit();} else {$name=$_POST["delete_object"];}//если массив с введенным именем пуст то выводим ошибку
//и прекращаем выполнение кода, если же массив содержит данные то сохраняем данные в переменную
}
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------



//-----------------------------------------------------Ищем нужную запись в бд и выясняем местонахождение изображения в директории сервера-------------------------------

$sql = "select * from menu where name= '$name'";//Подготавливаем запрос по поиску соответсвия наименования объекта меню
//для проверки его существующего дубля в базе данных
$result = pg_query($conn, $sql);//выполняем запрос к бд используя подготовленное соединение и запрос
$row = pg_fetch_assoc($result);//сохраняем результат выборки в переменую в массив $row
$link_image = $row['link_image'];//сохраняем ссылку на изображение из бд в переменную

if (pg_num_rows($result) < 1) {//Если результат выборки меньше единиы значит данных нет необходимо вывести пользователю ошибку и прекратить выполнение кода
    
    echo "<h3 class='text_yellow'>Запись с таким идентификатором не найдена, возможно она уже удалена</h3>";//Выводим ошибку 

    echo "</div>";//закрываем блок со стилями в случае ошибки т.к. функция exit прекратит выполнение кода 

    pg_close($conn);//Закрываем соединение с бд
    
    exit();//прекращаем выполнение кода
    }
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------



//-----------------------------------------------------Удаляем изображение----------------------------------------------------------------------------------------------
$filePath = "/var/www/html" . $link_image; //Создаем абсолютный путь к файлу изображения
if (file_exists($filePath)) { // Проверяем, существует ли файл
    if (unlink($filePath)) { // Удаляем файл
        echo "Изображение успешно удаленно из каталога сервера<br><br>";//Сообщение в случае успешного выполнения 
    } else {
        echo "Ошибка при удалении Изображения";//Сообщение в случае не удачного выполнения 
    }
} else {
    echo "Файл изображения не существует";//Изображения у объекта может и не быть поэтому это не всегда является ошибкой прекращать выполнение кода при отсутствии изображения 
    //не имеет смысла т.к. это не позволит удалять записи с отсутствующим изображением
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------



//-----------------------------------------------------Удаляем Запись из БД и перенаправляем пользователя-----------------------------------------------------------------
$sql1 = "DELETE FROM menu
WHERE name = '$name'";//Подготавливаем запрос по поиску соответсвия наименования объекта меню
//для проверки его существующего дубля в базе данных
$result1 = pg_query($conn, $sql1);//выполняем запрос к бд используя подготовленное соединение и запрос

if ($result1) {//если запрос выполнен успешно 
    
    echo "<h3 class='text_yellow'>Запись успешно удалена</h3><br><br>";//сообщение об успешном выполненнии 
    echo "<a href='/3_admin_panel/1_menu_panel/1_menu_panel.php'>Вернуться к редактированию меню</h3><br><br>";//сообщение об успешном выполненнии 
    echo "</div>";//закрываем блок со стилями в случае ошибки т.к. функция exit прекратит выполнение кода 

    pg_close($conn);//Закрываем соединение с бд
    

    }

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
?>

</body>
